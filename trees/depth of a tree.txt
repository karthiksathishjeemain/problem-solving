/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if (root==NULL)return 0;
        int lh = maxDepth(root->left);
        int rh = maxDepth(root->right);
        // // maxi = INT_MIN;
        // if (root==nullptr)return 0;
        // queue<TreeNode*>q;
        // q.push(root);
        // vector<int>level;
        // int  maxi=0;
        // while(!q.empty()){
        //     int size = q.size();
        //     for (int i=0;i<size;i++){
        //     TreeNode* node = q.front();
        //     q.pop();
        //     // level.push_back(node->val);

        //         if (node->left!=nullptr)q.push(node->left);
        //         if (node->right!=nullptr)q.push(node->right);
        //     }
        //     maxi++;
        // }
        return 1+max(lh,rh);
    }
};