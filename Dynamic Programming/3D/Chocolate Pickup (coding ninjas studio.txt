U can also model the code as a 4D Dp but it is not good as we try to move both alice and bob simultaneusly
and having i1 and i2 separate for them is not at all necessary as i1 == i2 always

#include <bits/stdc++.h> 

int maximumChocolates(int r, int c, vector<vector<int>> &grid) {
  vector<vector<vector<int>>>dp(r,vector<vector<int>>(c+2,vector<int>(c+2)));
  for (int j1=1;j1<=c;j1++){
    for (int j2=1;j2<=c;j2++){
      if (j1==j2)dp[r-1][j1][j2]=grid[r-1][j1-1];
      else dp[r-1][j1][j2]=grid[r-1][j1-1]+grid[r-1][j2-1];
    }
  }
  for (int i=r-2;i>=0;i--){
    for (int j1=1;j1<=c;j1++){
      for (int j2=1;j2<=c;j2++){
        int maxi = -1;
        for (int dj1 :{-1,0,1}){
          for (int dj2:{-1,0,1}){
          
            maxi = max(maxi,dp[i+1][j1+dj1][j2+dj2]);
            
          }
        }
       if (j1==j2) dp[i][j1][j2] = grid[i][j1-1]+maxi;
       else dp[i][j1][j2]= grid[i][j1-1]+grid[i][j2-1]+maxi;
      }
    }
  }
  return dp[0][1][c];
}