
N^2logN

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = nums.size();
        // map<int,int>mp;
        vector<vector<int>>vec;
        set<vector<int>>st;
        sort(nums.begin(),nums.end());
        for (int i=0;i<n;i++){
            int l = i+1;
            int r = n-1;
            while(l<r){
                int sum =( nums[i]+nums[l]+nums[r]);
                if (sum==0){
                    vector<int>dummy = {nums[i],nums[l],nums[r]};
                    sort(dummy.begin(), dummy.end());
                    st.insert(dummy);
                }
                if (sum>0){
                    r--;
                }
                else {
                    l++;
                }
                
                    
                }

            
        }
for(auto it : st){
    vec.push_back(it);
}
return vec;
    }
};


N2


class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
         sort(nums.begin(),nums.end());
         int n = nums.size();
           vector<vector<int>>ans;
         set<vector<int>>st;
         for (int i=0;i<n;i++){
           if (i>0 && nums[i]==nums[i-1])continue;
                int l =i+1;
                int r= n-1;
                while(l<r){
                    int sum = nums[i]+nums[l]+nums[r];
                    if (sum<0){
                        l++;
                    }
                    else if(sum>0){
                        r--;
                    }
                    else{
                        vector<int>vec={nums[i],nums[l],nums[r]};
                        ans.push_back(vec);
                        l++;
                        r--;
                        while(l<r && nums[l]==nums[l-1]){l++;}
                        while(l<r && nums[r+1]==nums[r]){r--;}
                    }

                }}

            return ans;
         }
    
};