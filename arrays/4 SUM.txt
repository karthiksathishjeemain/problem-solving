
N^3

class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        sort(nums.begin(),nums.end());
        int n = nums.size();
        vector<vector<int>>ans;
        for(int i=0;i<n;i++){
            if (i>0&& nums[i-1]==nums[i])continue;
            for (int j=i+1;j<n;j++){
                    if (j>i+1&& nums[j-1]==nums[j])continue;
                    int l=j+1;
                    int r=n-1;
                    while(l<r){
                        long long a =nums[i]+nums[j];
                        long long b = nums[l]+nums[r];
                        long long sum =a +b;
                        if (sum>target){
                            r--;
                        }
                        else if (sum<target){
                            l++;
                        }
                        else {
                            vector<int>vec ={nums[i],nums[j],nums[l],nums[r]};
                            ans.push_back(vec);
                            l++;r--;
                            while(l<r && nums[l]==nums[l-1])l++;
                            while(l<r && nums[r]==nums[r+1])r--;
                        }
                    }
            }
        }
        return ans;
    }
};